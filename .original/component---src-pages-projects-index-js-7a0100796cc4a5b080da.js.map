{"version":3,"sources":["webpack://gatsby/./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack://gatsby/./src/components/nav_bar.js","webpack://gatsby/./src/components/pic_grid.js","webpack://gatsby/./src/pages/projects/index.js"],"names":["_assertThisInitialized","self","ReferenceError","NavBar","props","state","toggle","bind","this","setState","navLinks","className","curren_location","window","location","pathname","titles","listItems","forEach","link","i","push","key","to","info","toggleBtnType","infoContent","id","title","content","render","backLink","onClick","Component","PicGrid","gridItems","items","children","links","divs","staticImg","Projects","S","src","alt","placeholder"],"mappings":"iuGAAe,SAASA,EAAuBC,GAC7C,QAAa,IAATA,EACF,MAAM,IAAIC,eAAe,6DAG3B,OAAOD,E,+ICDYE,E,YACjB,WAAYC,GAAQ,IAAD,SAGf,cAAMA,IAAN,MACKC,MAAQ,CAACC,OAAQ,IACtB,EAAKA,OAAS,EAAKA,OAAOC,MAAZ,WALC,G,uCAQnBD,OAAA,WACIE,KAAKC,SAAS,CACVH,OAA+B,WAAtBE,KAAKH,MAAMC,QAA6C,KAAtBE,KAAKH,MAAMC,OAAiB,OAAS,Y,EAIxFI,SAAA,SAASC,GACL,IAAMC,EAAkBC,OAAOC,SAASC,SAElCC,EAAS,CAAC,OAAQ,WAAY,QAAS,WAEzCC,EAAY,GAUhB,MAbc,CAAC,IAAK,YAAa,SAAU,YAKrCC,SAAQ,SAACC,EAAMC,GACbD,IAASP,EACTK,EAAUI,KAAK,sBAAIC,IAAKF,EAAGT,UAAU,iBAAgB,0BAAKK,EAAOI,MAEjEH,EAAUI,KAAK,sBAAIC,IAAKF,EAAGT,UAAU,iBAAgB,gBAAC,KAAD,CAAMY,GAAIJ,GAAOH,EAAOI,SAI5EZ,KAAKJ,MAAMoB,OAASb,EAAY,iCAAQ,sBAAIA,UAAS,aAAeA,GAA5B,IAA2CM,EAA3C,M,EAGrDQ,cAAA,WACI,OAASjB,KAAKJ,MAAMoB,KAAO,OAAS,Q,EAGxCE,YAAA,WACI,GAAMlB,KAAKJ,MAAMoB,KACb,OACI,2BACI,sBAAIG,GAAG,cAAcnB,KAAKJ,MAAMoB,KAAKI,OACrC,uBAAKD,GAAG,gBACJ,yBAAInB,KAAKJ,MAAMoB,KAAKK,Y,EAOxCC,OAAA,WACI,OACI,gCACA,uBAAKH,GAAG,WACJ,uBAAKA,GAAG,WAAWhB,UAAWH,KAAKH,MAAMC,QACrC,0BAAQqB,GAAG,WAAWhB,UAAWH,KAAKH,MAAMC,QACxC,gBAAC,KAAD,CAAMiB,GAAIf,KAAKJ,MAAM2B,SAAUpB,UAAU,kBAAzC,eAKHH,KAAKE,SAAS,WAEf,0BAAQiB,GAAG,aAAahB,UAAWH,KAAKiB,gBAAiBO,QAASxB,KAAKF,QACnE,wBAAMK,UAAU,kBACW,SAAtBH,KAAKH,MAAMC,OAAoB,QAAUE,KAAKiB,oBAM/D,uBAAKE,GAAG,cAAchB,UAAcH,KAAKiB,gBAAV,IAA6BjB,KAAKH,MAAMC,QAClEE,KAAKE,WACLF,KAAKkB,iB,GAzEcO,c,qICCfC,E,YACjB,WAAY9B,GAAQ,IAAD,SACf,cAAMA,IAAN,MACKC,MAAQ,GAFE,G,uCAKnB8B,UAAA,WACI,IAAIC,EAAQ5B,KAAKJ,MAAMiC,SACnBC,EAAQ9B,KAAKJ,MAAMkC,MACnBC,EAAO,GAUX,OARAH,EAAMlB,SAAQ,SAACsB,EAAWpB,GACtBmB,EAAKlB,KACD,gBAAC,KAAD,CAAMC,IAAKF,EAAGG,GAAIe,EAAMlB,IACnBoB,OAKND,G,EAGXT,OAAA,WACI,OACI,uBAAKnB,UAAU,kBACX,uBAAKA,UAAU,YACVH,KAAK2B,e,GA1BWF,aCChBQ,E,sGAEnBH,MAAA,WACE,MAAQ,CACN,mBACA,6B,EAIJR,OAAA,WACE,OACE,uBAAKH,GAAG,gBACN,gBAAC,IAAD,CAAQI,SAAS,MACjB,wBAAMpB,UAAU,gBACZ,sBAAIA,UAAU,mBAAd,YACA,gBAACuB,EAAD,CAASI,MAAO9B,KAAK8B,SACnB,gBAAC,EAAAI,EAAD,CACEC,IAAI,+EACJC,IAAI,GACJC,YAAY,UACZlC,UAAU,YAJZ,sBAMA,gBAAC,EAAA+B,EAAD,CACEC,IAAI,+EACJC,IAAI,GACJC,YAAY,UACZlC,UAAU,YAJZ,0B,GAtBwBsB","file":"component---src-pages-projects-index-js-7a0100796cc4a5b080da.js","sourcesContent":["export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import React, { Component } from 'react'\r\nimport { Link } from \"gatsby\"\r\nimport \"../styles/nav_bar.css\"\r\n\r\nexport default class NavBar extends Component {\r\n    constructor(props) {\r\n        // props.info: {title: \"kjh\", content: \"kjhu\"}\r\n        // props.backLink: 'String'\r\n        super(props);\r\n        this.state = {toggle: \"\"};\r\n        this.toggle = this.toggle.bind(this);\r\n    }\r\n\r\n    toggle() {\r\n        this.setState({\r\n            toggle: (this.state.toggle === \"closed\" || this.state.toggle === \"\") ? \"open\" : \"closed\"\r\n        });\r\n    }\r\n\r\n    navLinks(className) {\r\n        const curren_location = window.location.pathname\r\n        const links = [\"/\", \"/projects\", \"/about\", \"/contact\"]\r\n        const titles = [\"Home\", \"Projects\", \"About\", \"Contact\"]\r\n\r\n        let listItems = []\r\n\r\n        links.forEach((link, i) => {\r\n            if (link === curren_location) {\r\n                listItems.push(<li key={i} className=\"nav_link menu\"><h1>{titles[i]}</h1></li>)\r\n            } else {\r\n                listItems.push(<li key={i} className=\"nav_link menu\"><Link to={link}>{titles[i]}</Link></li>)\r\n            }\r\n        })\r\n\r\n        return !!this.props.info && !className ? <></> : <ul className={`nav_links ${className}`}> {listItems} </ul>\r\n    }\r\n\r\n    toggleBtnType() {\r\n        return !!this.props.info ? \"info\" : \"menu\"\r\n    }\r\n\r\n    infoContent() {\r\n        if (!!this.props.info) {\r\n            return (\r\n                <div>\r\n                    <h1 id=\"info_title\">{this.props.info.title}</h1>\r\n                    <div id=\"info_content\">\r\n                        <p>{this.props.info.content}</p>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n            <nav id=\"nav_bar\">\r\n                <div id=\"nav_btns\" className={this.state.toggle}>\r\n                    <button id=\"back_btn\" className={this.state.toggle}>\r\n                        <Link to={this.props.backLink} className=\"material-icons\">\r\n                            arrow_back\r\n                        </Link>\r\n                    </button>\r\n\r\n                    {this.navLinks(\"desktop\")}\r\n\r\n                    <button id=\"toggle_btn\" className={this.toggleBtnType()} onClick={this.toggle}>\r\n                        <span className=\"material-icons\">\r\n                            {this.state.toggle === \"open\" ? \"close\" : this.toggleBtnType()}\r\n                        </span>\r\n                    </button>\r\n                </div>\r\n            </nav>\r\n            \r\n            <div id=\"nav_content\" className={`${this.toggleBtnType()} ${this.state.toggle}`}>\r\n                {this.navLinks()}\r\n                {this.infoContent()}\r\n            </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Link } from \"gatsby\"\r\n\r\nimport \"../styles/pic_grid.css\"\r\n\r\nexport default class PicGrid extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    gridItems() {\r\n        let items = this.props.children\r\n        let links = this.props.links\r\n        let divs = []\r\n\r\n        items.forEach((staticImg, i) => {\r\n            divs.push(\r\n                <Link key={i} to={links[i]}>\r\n                    {staticImg}\r\n                </Link>\r\n            )\r\n        })\r\n\r\n        return divs\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"grid_container\">\r\n                <div className=\"pic_grid\">\r\n                    {this.gridItems()}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { StaticImage } from \"gatsby-plugin-image\"\r\n\r\nimport NavBar from \"../../components/nav_bar.js\"\r\nimport PicGrid from \"../../components/pic_grid\"\r\n\r\nexport default class Projects extends Component {\r\n\r\n  links() {\r\n    return ([\r\n      \"timon_pa_aventyr\",\r\n      \"twenty_nineteen_of_simon\"\r\n    ])\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"site_wrapper\">\r\n        <NavBar backLink=\"/\"/>\r\n        <main className=\"site_content\">\r\n            <h1 className=\"main_page_title\">Projects</h1>\r\n            <PicGrid links={this.links()}>\r\n              <StaticImage\r\n                src=\"https://drive.google.com/uc?export=view&id=1O3-8r_YcagpaeCZddTV9GFBdjeEIQ1Uu\"\r\n                alt=\"\"\r\n                placeholder=\"blurred\"\r\n                className=\"grid_item\"\r\n              />\r\n              <StaticImage\r\n                src=\"https://drive.google.com/uc?export=view&id=16ZEvX1F2AQYn0QGhIqXt_XrzF1btUxoe\"\r\n                alt=\"\"\r\n                placeholder=\"blurred\"\r\n                className=\"grid_item\"\r\n              />\r\n            </PicGrid>\r\n        </main>\r\n      </div>\r\n    )\r\n  }\r\n  \r\n}\r\n"],"sourceRoot":""}